# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: wiz@0
  inputs:
    command: 'iac'
    clientid: $(WIZ_CLIENT_ID)
    secret: $(WIZ_CLIENT_SECRET)
    succeedOnFailures: false
    policyHitsOnly: false
    scanTags: "cicd=ado,app=terraform"
    path: '.'
    name: 'Terraform Code'
    scanSecrets: true

# trigger:
# - main

# resources:
# - repo: self

# variables:
#   # Container registry service connection established during pipeline creation
#   dockerRegistryServiceConnection: '<unique-id>'
#   imageRepository: 'awslogger'
#   containerRegistry: '<registryname>.azurecr.io'
#   dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
#   tag: '$(Build.BuildId)'

#   # Agent VM image name
#   vmImageName: 'ubuntu-latest'

# stages:
# - stage: Build
#   displayName: Build, scan, and push stage
#   jobs:
#   - job: Build
#     displayName: Build and Scan
#     pool:
#       vmImage: $(vmImageName)
#     steps:
#     - task: Docker@2
#       displayName: Build the Docker image
#       inputs:
#         command: build
#         repository: $(imageRepository)
#         dockerfile: $(dockerfilePath)
#         containerRegistry: $(dockerRegistryServiceConnection)
#         tags: |
#           $(tag)
#     - task: wiz@0
#       name: ScanImage
#       displayName: Scan the Docker image
#       inputs:
#         command: 'image'
#         clientid: $(WIZ_CLIENT_ID)
#         secret: $(WIZ_CLIENT_SECRET)
#         image: $(containerRegistry)/$(imageRepository):$(tag)
#         policyHitsOnly: false
#         scanPolicies: herrera-vuln-high

#   - job: Push
#     displayName: Push Image to ACR
#     dependsOn: Build
#     condition: succeeded('Build')
#     pool:
#       vmImage: $(vmImageName)
#     steps:
#     - task: Docker@2
#       displayName: Push the Docker image to ACR
#       inputs:
#         command: push
#         repository: $(imageRepository)
#         containerRegistry: $(dockerRegistryServiceConnection)
#         tags: |
#           $(tag)